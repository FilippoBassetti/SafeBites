openapi: 3.0.0
info:
  title: SafeBites OpenAPI 3.0
  description: APi for managing and research of resturants
  license:
    name: MIT
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/filippo.bassetti/SafeBitesApi/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8000/api/v1
  description: Localhost
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /inventory:
    get:
      tags:
      - developers
      summary: searches inventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      operationId: searchInventory
      parameters:
      - name: searchString
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: addInventory
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        "201":
          description: item created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing item already exists
components:
  schemas:
    Student:
      required:
      - email
      - id
      - username
      type: object
      properties:
        id:
          type: integer
          description: ID of the user
        email:
          type: string
          description: Email address of the user
        username:
          type: string
          description: username
    Restaurants:
      required:
      - adress
      - category
      - email
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID of the restaurant
        email:
          type: string
          description: Email address of the restaurant
        name:
          type: string
          description: Name of the restaurant
        adress:
          type: string
          description: adress of the restaurant
        category:
          type: string
          description: type of gnam gnam place of the activity
    Dish:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID of the dish
        name:
          type: string
          description: name of the dish
